// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    resetGame={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="main-title header-content"
        >
          Jquery Quiz
        </h1>,
        <button
          className="question-button reset-button"
          onClick={[MockFunction]}
        >
          Reset Game
        </button>,
        <h2
          className="score header-content"
        >
          Score:
          <span />
        </h2>,
        <h2
          className="high-score header-content"
        >
          High Score:
          <span />
        </h2>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Jquery Quiz",
          "className": "main-title header-content",
        },
        "ref": null,
        "rendered": "Jquery Quiz",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Reset Game",
          "className": "question-button reset-button",
          "onClick": [MockFunction],
        },
        "ref": null,
        "rendered": "Reset Game",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Score:",
            <span />,
          ],
          "className": "score header-content",
        },
        "ref": null,
        "rendered": Array [
          "Score:",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "High Score:",
            <span />,
          ],
          "className": "high-score header-content",
        },
        "ref": null,
        "rendered": Array [
          "High Score:",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": "h2",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="main-title header-content"
          >
            Jquery Quiz
          </h1>,
          <button
            className="question-button reset-button"
            onClick={[MockFunction]}
          >
            Reset Game
          </button>,
          <h2
            className="score header-content"
          >
            Score:
            <span />
          </h2>,
          <h2
            className="high-score header-content"
          >
            High Score:
            <span />
          </h2>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Jquery Quiz",
            "className": "main-title header-content",
          },
          "ref": null,
          "rendered": "Jquery Quiz",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Reset Game",
            "className": "question-button reset-button",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": "Reset Game",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Score:",
              <span />,
            ],
            "className": "score header-content",
          },
          "ref": null,
          "rendered": Array [
            "Score:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "High Score:",
              <span />,
            ],
            "className": "high-score header-content",
          },
          "ref": null,
          "rendered": Array [
            "High Score:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "h2",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
